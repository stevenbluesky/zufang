<h1 id="nprogress">NProgress</h1>
<p>Slim progress bars for Ajax&#39;y applications. Inspired by Google, YouTube, and<br>Medium.</p>
<h2 id="installation">Installation</h2>
<p>Add <a href="http://ricostacruz.com/nprogress/nprogress.js">nprogress.js</a> and <a href="http://ricostacruz.com/nprogress/nprogress.css">nprogress.css</a> to your project.</p>
<pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-title">script</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">'nprogress.js'</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">link</span> <span class="hljs-attribute">rel</span>=<span class="hljs-value">'stylesheet'</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">'nprogress.css'</span>/&gt;</span>
</code></pre>
<p>NProgress is available via <a href="http://bower.io/search/?q=nprogress">bower</a> and <a href="https://www.npmjs.org/package/nprogress">npm</a>.</p>
<pre><code>$ bower <span class="hljs-operator"><span class="hljs-keyword">install</span> <span class="hljs-comment">--save nprogress</span>
$ npm <span class="hljs-keyword">install</span> <span class="hljs-comment">--save nprogress</span></span>
</code></pre><h2 id="basic%20usage">Basic usage</h2>
<p>Simply call <code>start()</code> and <code>done()</code> to control the progress bar.</p>
<pre><code class="hljs js">NProgress.start();
NProgress.done();
</code></pre>
<p>Using <a href="https://github.com/rails/turbolinks">Turbolinks</a> or similar? Ensure you&#39;re using Turbolinks 1.3.0+, and use<br>this: (explained<br>    <a href="https://github.com/rstacruz/nprogress/issues/8#issuecomment-23010560">here</a>)</p>
<pre><code class="hljs js">$(<span class="hljs-built_in">document</span>).on(<span class="hljs-string">'page:fetch'</span>,   <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ NProgress.start(); });
$(<span class="hljs-built_in">document</span>).on(<span class="hljs-string">'page:change'</span>,  <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ NProgress.done(); });
$(<span class="hljs-built_in">document</span>).on(<span class="hljs-string">'page:restore'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ NProgress.remove(); });
</code></pre>
<h2 id="ideas">Ideas</h2>
<ul>
<li><p>Add progress to your Ajax calls! Bind it to the jQuery <code>ajaxStart</code> and<br><code>ajaxStop</code> events.</p>
</li>
<li><p>Make a fancy loading bar even without Turbolinks/Pjax! Bind it to<br><code>$(document).ready</code> and <code>$(window).load</code>.</p>
</li>
</ul>
<h2 id="advanced%20usage">Advanced usage</h2>
<p><strong>Percentages:</strong> To set a progress percentage, call <code>.set(n)</code>, where <em>n</em> is a<br>number between <code>0..1</code>.</p>
<pre><code class="hljs js">NProgress.set(<span class="hljs-number">0.0</span>);     <span class="hljs-comment">// Sorta same as .start()</span>
NProgress.set(<span class="hljs-number">0.4</span>);
NProgress.set(<span class="hljs-number">1.0</span>);     <span class="hljs-comment">// Sorta same as .done()</span>
</code></pre>
<p><strong>Incrementing:</strong> To increment the progress bar, just use <code>.inc()</code>. This<br>increments it with a random amount. This will never get to 100%: use it for<br>every image load (or similar).</p>
<pre><code class="hljs js">NProgress.inc();
</code></pre>
<p>If you want to increment by a specific value, you can pass that as a parameter:</p>
<pre><code class="hljs js">NProgress.inc(<span class="hljs-number">0.2</span>);    <span class="hljs-comment">// This will get the current status value and adds 0.2 until status is 0.994</span>
</code></pre>
<p><strong>Force-done:</strong> By passing <code>true</code> to <code>done()</code>, it will show the progress bar<br>even if it&#39;s not being shown. (The default behavior is that <em>.done()</em> will not<br>    do anything if <em>.start()</em> isn&#39;t called)</p>
<pre><code class="hljs js">NProgress.done(<span class="hljs-literal">true</span>);
</code></pre>
<p><strong>Get the status value:</strong> To get the status value, use <code>.status</code></p>
<h2 id="configuration">Configuration</h2>
<h4 id="%3Ccode%3Eminimum%3C%2Fcode%3E"><code>minimum</code></h4>
<p>Changes the minimum percentage used upon starting. (default: <code>0.08</code>)</p>
<pre><code class="hljs js">NProgress.configure({ minimum: <span class="hljs-number">0.1</span> });
</code></pre>
<h4 id="%3Ccode%3Etemplate%3C%2Fcode%3E"><code>template</code></h4>
<p>You can change the markup using <code>template</code>. To keep the progress<br>bar working, keep an element with <code>role=&#39;bar&#39;</code> in there. See the [default template]<br>for reference.</p>
<pre><code class="hljs js">NProgress.configure({
  template: <span class="hljs-string">"&lt;div class='....'&gt;...&lt;/div&gt;"</span>
});
</code></pre>
<h4 id="%3Ccode%3Eease%3C%2Fcode%3E%20and%20%3Ccode%3Espeed%3C%2Fcode%3E"><code>ease</code> and <code>speed</code></h4>
<p>Adjust animation settings using <em>ease</em> (a CSS easing string)<br>and <em>speed</em> (in ms). (default: <code>ease</code> and <code>200</code>)</p>
<pre><code class="hljs js">NProgress.configure({ ease: <span class="hljs-string">'ease'</span>, speed: <span class="hljs-number">500</span> });
</code></pre>
<h4 id="%3Ccode%3Etrickle%3C%2Fcode%3E"><code>trickle</code></h4>
<p>Turn of the automatic incrementing behavior by setting this to <code>false</code>. (default: <code>true</code>)</p>
<pre><code class="hljs js">NProgress.configure({ trickle: <span class="hljs-literal">false</span> });
</code></pre>
<h4 id="%3Ccode%3Etricklerate%3C%2Fcode%3E%20and%20%3Ccode%3Etricklespeed%3C%2Fcode%3E"><code>trickleRate</code> and <code>trickleSpeed</code></h4>
<p>You can adjust the <em>trickleRate</em> (how much to increase per trickle) and<br><em>trickleSpeed</em> (how often to trickle, in ms).</p>
<pre><code class="hljs js">NProgress.configure({ trickleRate: <span class="hljs-number">0.02</span>, trickleSpeed: <span class="hljs-number">800</span> });
</code></pre>
<h4 id="%3Ccode%3Eshowspinner%3C%2Fcode%3E"><code>showSpinner</code></h4>
<p>Turn off loading spinner by setting it to false. (default: <code>true</code>)</p>
<pre><code class="hljs js">NProgress.configure({ showSpinner: <span class="hljs-literal">false</span> });
</code></pre>
<h4 id="%3Ccode%3Eparent%3C%2Fcode%3E"><code>parent</code></h4>
<p>specify this to change the parent container. (default: <code>body</code>)</p>
<pre><code class="hljs js">NProgress.configure({ parent: <span class="hljs-string">'#container'</span> });
</code></pre>
<h2 id="customization">Customization</h2>
<p>Just edit <code>nprogress.css</code> to your liking. Tip: you probably only want to find<br>and replace occurances of <code>#29d</code>.</p>
<p>The included CSS file is pretty minimal... in fact, feel free to scrap it and<br>make your own!</p>
<h2 id="resources">Resources</h2>
<ul>
<li><a href="http://www.usabilitypost.com/2013/08/19/new-ui-pattern-website-loading-bars/">New UI Pattern: Website Loading Bars</a> (usabilitypost.com)</li>
</ul>
<h2 id="support">Support</h2>
<p><strong>Bugs and requests</strong>: submit them through the project&#39;s issues tracker.<br><br><a href="https://github.com/rstacruz/nprogress/issues"><img src="http://img.shields.io/github/issues/rstacruz/nprogress.svg" alt="Issues"></a></p>
<p><strong>Questions</strong>: ask them at StackOverflow with the tag <em>nprogress</em>.<br><br><a href="http://stackoverflow.com/questions/tagged/nprogress"><img src="http://img.shields.io/badge/stackoverflow-nprogress-brightgreen.svg" alt="StackOverflow"></a></p>
<p><strong>Chat</strong>: join us at gitter.im.<br><br><a href="https://gitter.im/rstacruz/nprogress"><img src="http://img.shields.io/badge/gitter-rstacruz / nprogress-brightgreen.svg" alt="Chat"></a></p>
<p>[default template]:<br><a href="https://github.com/rstacruz/nprogress/blob/master/nprogress.js#L31">https://github.com/rstacruz/nprogress/blob/master/nprogress.js#L31</a></p>
<h2 id="thanks">Thanks</h2>
<p><strong>NProgress</strong> Â© 2013-2014, Rico Sta. Cruz. Released under the <a href="http://mit-license.org/">MIT License</a>.<br><br>Authored and maintained by Rico Sta. Cruz with help from <a href="http://github.com/rstacruz/jsfuse/contributors">contributors</a>.</p>
<blockquote>
<p><a href="http://ricostacruz.com">ricostacruz.com</a> &nbsp;&middot;&nbsp;<br>GitHub <a href="https://github.com/rstacruz">@rstacruz</a> &nbsp;&middot;&nbsp;<br>Twitter <a href="https://twitter.com/rstacruz">@rstacruz</a></p>
</blockquote>
<p><a href="http://travis-ci.org/rstacruz/nprogress"><img src="https://api.travis-ci.org/rstacruz/nprogress.svg?branch=master" alt="Status"></a><br><a href="https://npmjs.org/package/nprogress" title="View this project on npm"><img src="https://img.shields.io/npm/v/nprogress.png" alt="npm version"></a></p>
